{"ast":null,"code":"var _jsxFileName = \"/Users/shayaansaiyed/Documents/Projects/notes-manager/notes-manager/src/App.js\";\nimport React, { Component } from 'react';\nimport Sidebar from './components/Sidebar.js';\nimport Editor from './components/Editor.js';\nimport 'milligram';\nconst NoteIDContext = React.createContext;\n\nclass App extends Component {\n  constructor() {\n    super();\n    localStorage.clear(); // this.state = {\n    //   editorText: \"\",\n    //   currentNoteID: 0\n    // }\n    //initialize localStorage for first Note\n\n    localStorage.setItem(\"currentState\", 0);\n    localStorage.setItem(0, \" \");\n    this.handleChange = this.handleChange.bind(this);\n    this.addNewNote = this.addNewNote.bind(this);\n  } // handleSaveClick(event){\n  //   console.log(\"Savings Note ID: \" + this.state.currentNoteID);\n  //   event.preventDefault();\n  //   localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n  // }\n\n\n  handleChange(value) {\n    localStorage.setItem(localStorage[\"currentState\"], value);\n  }\n\n  addNewNote() {\n    localStorage.setItem(\"currentState\", int(localStorage[\"currentState\"] + 1));\n    localStorage.setItem(localStorage[\"currentState\"], \" \");\n  }\n\n  handleNoteSelection() {\n    alert(\"handling note selection with ID \");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" notes app \")), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      onNewNoteClick: this.addNewNote,\n      onClick: this.handleNoteSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Editor, {\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shayaansaiyed/Documents/Projects/notes-manager/notes-manager/src/App.js"],"names":["React","Component","Sidebar","Editor","NoteIDContext","createContext","App","constructor","localStorage","clear","setItem","handleChange","bind","addNewNote","value","int","handleNoteSelection","alert","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,WAAP;AAEA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,aAA5B;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,GAAE;AACX;AAEAC,IAAAA,YAAY,CAACC,KAAb,GAHW,CAKX;AACA;AACA;AACA;AAEA;;AACAD,IAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqC,CAArC;AACAF,IAAAA,YAAY,CAACE,OAAb,CAAqB,CAArB,EAAwB,GAAxB;AAEA,SAAKC,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKC,UAAL,GAAgB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAhB;AACD,GAjByB,CAmB1B;AACA;AACA;AACA;AACA;;;AAEAD,EAAAA,YAAY,CAACG,KAAD,EAAO;AACjBN,IAAAA,YAAY,CAACE,OAAb,CAAqBF,YAAY,CAAC,cAAD,CAAjC,EAAmDM,KAAnD;AACD;;AAEDD,EAAAA,UAAU,GAAE;AACVL,IAAAA,YAAY,CAACE,OAAb,CAAqB,cAArB,EAAqCK,GAAG,CAACP,YAAY,CAAC,cAAD,CAAZ,GAA6B,CAA9B,CAAxC;AACAA,IAAAA,YAAY,CAACE,OAAb,CAAqBF,YAAY,CAAC,cAAD,CAAjC,EAAmD,GAAnD;AACD;;AAEDQ,EAAAA,mBAAmB,GAAE;AACnBC,IAAAA,KAAK,CAAC,kCAAD,CAAL;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,cAAc,EAAI,KAAKL,UADzB;AAEE,MAAA,OAAO,EAAI,KAAKG,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAI,KAAKL,YADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAJF,CADF;AAgBD;;AAvDyB;;AA0D5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar.js'\nimport Editor from './components/Editor.js'\nimport 'milligram'\n\nconst NoteIDContext = React.createContext\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    localStorage.clear()\n\n    // this.state = {\n    //   editorText: \"\",\n    //   currentNoteID: 0\n    // }\n\n    //initialize localStorage for first Note\n    localStorage.setItem(\"currentState\", 0);\n    localStorage.setItem(0, \" \");\n\n    this.handleChange=this.handleChange.bind(this);\n    this.addNewNote=this.addNewNote.bind(this);\n  }\n\n  // handleSaveClick(event){\n  //   console.log(\"Savings Note ID: \" + this.state.currentNoteID);\n  //   event.preventDefault();\n  //   localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n  // }\n\n  handleChange(value){\n    localStorage.setItem(localStorage[\"currentState\"], value);\n  }\n\n  addNewNote(){\n    localStorage.setItem(\"currentState\", int(localStorage[\"currentState\"]+1));\n    localStorage.setItem(localStorage[\"currentState\"], \" \");\n  }\n\n  handleNoteSelection(){\n    alert(\"handling note selection with ID \" );\n  }\n\n  render(){\n    return(\n      <div class=\"App\">\n        <div class=\"row\">\n          <h1 class=\"column\"> notes app </h1>\n        </div>\n        <div class=\"row\">\n          <Sidebar\n            onNewNoteClick = {this.addNewNote}\n            onClick = {this.handleNoteSelection}\n          />\n          <Editor\n            handleChange = {this.handleChange}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}