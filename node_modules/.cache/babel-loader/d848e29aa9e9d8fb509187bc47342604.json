{"ast":null,"code":"var _jsxFileName = \"/Users/shayaansaiyed/Documents/Projects/notes-manager/notes-manager/react-notes-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Sidebar from './components/Sidebar.js';\nimport Editor from './components/Editor.js';\nimport 'milligram';\n\nclass App extends Component {\n  constructor() {\n    super();\n    localStorage.clear();\n    this.state = {\n      editorText: \"\",\n      currentNoteID: 0\n    }; //initialize localStorage for first Note\n\n    localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n    this.handleChange = this.handleChange.bind(this);\n    this.addNewNote = this.addNewNote.bind(this);\n    this.handleNoteSelection = this.handleNoteSelection.bind(this);\n  }\n\n  handleChange(value) {\n    this.setState({\n      editorText: value\n    });\n    localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n  }\n\n  addNewNote() {\n    this.setState({\n      currentNoteID: this.state.currentNoteID + 1,\n      editorText: \" \"\n    });\n    console.log(\"Add New Note: Note ID: \" + this.state.currentNoteID);\n    localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n  }\n\n  handleNoteSelection(noteID) {\n    this.setState({\n      currentNoteID: noteID,\n      editorText: localStorage.getItem(noteID)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" notes app \")), React.createElement(\"div\", {\n      class: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      onNewNoteClick: this.addNewNote,\n      onClick: this.handleNoteSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Editor, {\n      handleChange: this.handleChange,\n      text: this.state.editorText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shayaansaiyed/Documents/Projects/notes-manager/notes-manager/react-notes-app/src/App.js"],"names":["React","Component","Sidebar","Editor","App","constructor","localStorage","clear","state","editorText","currentNoteID","setItem","handleChange","bind","addNewNote","handleNoteSelection","value","setState","console","log","noteID","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,GAAE;AACX;AAEAC,IAAAA,YAAY,CAACC,KAAb;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb,CALW,CAUX;;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,KAAKH,KAAL,CAAWE,aAAhC,EAA+C,KAAKF,KAAL,CAAWC,UAA1D;AAEA,SAAKG,YAAL,GAAkB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlB;AACA,SAAKC,UAAL,GAAgB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAhB;AACA,SAAKE,mBAAL,GAAyB,KAAKA,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAAzB;AACD;;AAGDD,EAAAA,YAAY,CAACI,KAAD,EAAO;AACjB,SAAKC,QAAL,CAAc;AACZR,MAAAA,UAAU,EAAEO;AADA,KAAd;AAGAV,IAAAA,YAAY,CAACK,OAAb,CAAqB,KAAKH,KAAL,CAAWE,aAAhC,EAA+C,KAAKF,KAAL,CAAWC,UAA1D;AACD;;AAEDK,EAAAA,UAAU,GAAE;AACV,SAAKG,QAAL,CAAc;AACZP,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWE,aAAX,GAAyB,CAD5B;AAEZD,MAAAA,UAAU,EAAE;AAFA,KAAd;AAIAS,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4B,KAAKX,KAAL,CAAWE,aAAnD;AACAJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,KAAKH,KAAL,CAAWE,aAAhC,EAA+C,KAAKF,KAAL,CAAWC,UAA1D;AACD;;AAEDM,EAAAA,mBAAmB,CAACK,MAAD,EAAQ;AACzB,SAAKH,QAAL,CAAc;AACZP,MAAAA,aAAa,EAAEU,MADH;AAEZX,MAAAA,UAAU,EAAEH,YAAY,CAACe,OAAb,CAAqBD,MAArB;AAFA,KAAd;AAID;;AAEDE,EAAAA,MAAM,GAAE;AAEN,WACE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,EAIE;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,cAAc,EAAI,KAAKR,UADzB;AAEE,MAAA,OAAO,EAAI,KAAKC,mBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,MAAD;AACE,MAAA,YAAY,EAAI,KAAKH,YADvB;AAEE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,UAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CAJF,CADF;AAiBD;;AA9DyB;;AAiE5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Sidebar from './components/Sidebar.js'\nimport Editor from './components/Editor.js'\nimport 'milligram'\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    localStorage.clear()\n\n    this.state = {\n      editorText: \"\",\n      currentNoteID: 0\n    }\n\n    //initialize localStorage for first Note\n    localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n\n    this.handleChange=this.handleChange.bind(this);\n    this.addNewNote=this.addNewNote.bind(this);\n    this.handleNoteSelection=this.handleNoteSelection.bind(this);\n  }\n\n\n  handleChange(value){\n    this.setState({\n      editorText: value\n    })\n    localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n  }\n\n  addNewNote(){\n    this.setState({\n      currentNoteID: this.state.currentNoteID+1,\n      editorText: \" \"\n    })\n    console.log(\"Add New Note: Note ID: \" + this.state.currentNoteID);\n    localStorage.setItem(this.state.currentNoteID, this.state.editorText);\n  }\n\n  handleNoteSelection(noteID){\n    this.setState({\n      currentNoteID: noteID,\n      editorText: localStorage.getItem(noteID)\n    })\n  }\n\n  render(){\n\n    return(\n      <div class=\"App\">\n        <div class=\"row\">\n          <h1 class=\"column\"> notes app </h1>\n        </div>\n        <div class=\"row\">\n          <Sidebar\n            onNewNoteClick = {this.addNewNote}\n            onClick = {this.handleNoteSelection}\n          />\n          <Editor\n            handleChange = {this.handleChange}\n            text={this.state.editorText}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}